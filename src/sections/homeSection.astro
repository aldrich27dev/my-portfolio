<section
    class="h-[calc(100dvh-4rem)] min-h-[580px] flex flex-col justify-center items-center text-center gap-16"
    id="home"
>
    <div class="flex flex-col gap-12 text-center items-center justify-center">
        <h1
            class="text-[1.1rem] text-light-gray-primary py-[9px] px-8 w-fit font-semibold rounded-3xl bg-[#0001] dark:bg-[#fff1] dark:text-dark-texto-secondary"
        >
            Hello!<span class="hi inline">ðŸ‘‹</span> I'm Aldrich Naag
        </h1>
        <p
            class="text-[3.3rem] sm:text-[3.3rem] md:text-[4.2rem] font-black leading-[3rem] sm:leading-[4rem] text-[#111] dark:text-[#f3f3f3]"
            id="slogan0"
        >
            <span
                class="text-primary">Frontend developer</span> and <span class="text-primary">Graphic Desinger</span
            > with expertise in <span
                class="text-primary expertise-container" id="expertise-container"><span id="expertise-text"></span>
                <span class="typing-cursor">|</span></span
            >.
        </p>
    </div>
    <ul
        class="gap-3 flex justify-between items-center sm:gap-12 text-light-gray-primary dark:text-dark-gray-primary w-[calc(100dvw-5rem)] sm:w-fit"
    >
        <li class="flex flex-col sm:flex-row items-center gap-2">
            <span
                class="flex items-center font-bold bg-[#0001] dark:bg-[#fff1] py-1 px-3 rounded-xl"
            >
                +1.6
            </span>
            <span
                class="text-[0.71rem] sm:text-[0.81rem] leading-[1] text-center sm:text-left"
                >1+ years<br />experience</span
            >
        </li>
        <span
            class="h-8 border-r-[1px] border-dashed border-light-gray-secondary dark:border-dark-gray-secondary"
        ></span>
        <li class="flex flex-col sm:flex-row items-center gap-2">
            <span
                class="flex items-center font-bold bg-[#0001] dark:bg-[#fff1] py-1 px-3 rounded-xl"
                id="code-lines"
            >
                20k
            </span>
            <span
                class="text-[0.71rem] sm:text-[0.81rem] leading-[1] text-center sm:text-left"
                >Lines of <br />code written</span
            >
        </li>
        <span
            class="h-8 border-r-[1px] border-dashed border-light-gray-secondary dark:border-dark-gray-secondary"
        ></span>
        <li class="flex flex-col sm:flex-row items-center gap-2">
            <span
                class="flex items-center font-bold bg-[#0001] dark:bg-[#fff1] py-1 px-3 rounded-xl"
            >
                300+
            </span>
            <span
                class="text-[0.71rem] sm:text-[0.81rem] leading-[1] text-center sm:text-left"
                >Cups of coffee<br />consumed</span
            >
        </li>
    </ul>
    <div class="flex items-center gap-2 sm:gap-6">
        <a
            href="#contact"
            class="justify-center py-4 px-10 flex items-center gap-1 sm:gap-2 font-semibold text-[1.15rem] rounded-[28rem] bg-light-texto-primary dark:bg-dark-texto-primary text-light-fondo-primary dark:text-dark-fondo-primary hover:scale-[1.05] transition-transform"
        >
            <svg
                width="26"
                height="26"
                stroke-width="1.5"
                viewBox="0 0 24 24"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
                color="currentColor"
                ><path
                    d="M8 10h8M8 14h4M12 22c5.523 0 10-4.477 10-10S17.523 2 12 2 2 6.477 2 12c0 1.821.487 3.53 1.338 5L2.5 21.5l4.5-.838A9.955 9.955 0 0012 22z"
                    stroke="currentColor"
                    stroke-width="1.7"
                    stroke-linecap="round"
                    stroke-linejoin="round"></path>
            </svg>
            <span>Contact Me</span>
        </a>
        <!-- <a
            href="#contact"
            class="sm:w-40 justify-center p-3 pr-4 flex items-center gap-1 sm:gap-2 font-semibold text-[0.91rem] text-light-texto-secondary dark:text-dark-texto-secondary bg-[#0001] dark:bg-[#fff1] transition-colors rounded-lg hover:bg-light-texto-primary dark:hover:bg-dark-texto-primary hover:text-light-fondo-primary dark:hover:text-dark-fondo-primary"
        >
            <svg
                xmlns="http://www.w3.org/2000/svg"
                width="23"
                height="23"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                stroke-width="1.8"
                stroke-linecap="round"
                stroke-linejoin="round"
                ><line x1="7" y1="17" x2="17" y2="7"></line><polyline
                    points="7 7 17 7 17 17"></polyline></svg
            >
            Contacto
        </a> -->
    </div>
</section>
<script>
const expertiseOptions = [
        "Web designs",
        "React.JS",
        "Photoshop"
    ];
    
    const expertiseText = document.getElementById('expertise-text');
    const expertiseContainer = document.getElementById('expertise-container');
    let currentIndex = 0;
    let isTyping = true;
    let textPosition = 0;
    let currentText = '';
    
    const style = document.createElement('style');
    style.textContent = `
        .expertise-container {
            display: inline-block;
            min-height: 1.2em;
        }
        .typing-cursor {
            animation: blink 0.7s infinite;
        }
        @keyframes blink {
            0%, 100% { opacity: 1; }
            50% { opacity: 0; }
        }
    `;
    document.head.appendChild(style);
    
    function typeText() {
        const targetText = expertiseOptions[currentIndex];
        
        if (isTyping) {
            if (textPosition < targetText.length) {
                currentText = targetText.substring(0, textPosition + 1);
                expertiseText.textContent = currentText;
                textPosition++;
                setTimeout(typeText, 100);
            } else {
                isTyping = false;
                setTimeout(typeText, 2000);
            }
        } else {
            if (textPosition > 0) {
                currentText = targetText.substring(0, textPosition - 1);
                expertiseText.textContent = currentText;
                textPosition--;
                setTimeout(typeText, 50);
            } else {
                isTyping = true;
                currentIndex = (currentIndex + 1) % expertiseOptions.length;
                setTimeout(typeText, 500);
            }
        }
    }
    
    typeText();
</script>
